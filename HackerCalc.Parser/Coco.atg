
$namespace=HisRoyalRedness.com

using System.IO;

COMPILER HackerCalc

/*-------------------------------------------------------------------------*/

IGNORECASE

CHARACTERS
	letter              = "abcdefghijklmnopqrstuvwxyz_".
	digit               = "0123456789".
	cr                  = '\r'.
	lf                  = '\n'.
	tab                 = '\t'.
	stringCh            = ANY - '"' - '\\' - cr - lf.
	charCh              = ANY - '\'' - '\\' - cr - lf.
	hex                 = "0123456789abcdef".
    sen                 = "012345".

    /* Ordered from tightest to loosest binding order */
    logNotOp            = '!'.
    bitNotOp            = '~'.
    multOp              = '*'.
    divideOp            = "/\\".
    moduloOp            = '%'.
    addOp               = '+'.
    subOp               = '-'.
    shiftLeftOp         = '<'.
    shiftRightOp        = '>'.
    andOp               = '&'.
    orOp                = '|'.
    xorOp               = '^'.
    
    /* datatype modifiers */
    signed_int          = 'i'.
    unsigned_int        = 'u'.
    flt_type            = 'f'.
    time_type           = 't'.
    days_type           = 'd'.
    

TOKENS
	dec_integer         = digit { digit }.
    hex_integer         = "0x" hex { hex }.
    integer_type        = signed_int | unsigned_int.
    integer_bitwidth    = '_' ( "4" | "8" | "16" | "32" | "64" | "128" ).

    true_float          = {digit} '.' digit {digit}.
    typed_float         = digit { digit } CONTEXT ( flt_type ).
    float_type          = flt_type.

    seconds_only_1      = {digit} '.' digit {digit} CONTEXT ( time_type ).
    seconds_only_2      = {digit} '.' digit {digit} CONTEXT ( "sec" ).
    timespan_type       = time_type.

    /*timespan            = ( digit | sen digit) [ '.' digit { digit } ] time_type
                          | digit { digit } ':' ( digit | sen digit ) [ '.' digit { digit } ] [ time_type ] 
                          | digit { digit } ':' ( digit | sen digit ) ':' ( digit | sen digit ) [ '.' digit { digit } ] [ time_type ]
                          | digit { digit } ':' ( digit | sen digit ) ':' ( digit | sen digit ) ':' ( digit | sen digit ) [ '.' digit { digit } ] [ time_type ].*/
    timespan_day        = digit { digit } ( days_type | "day" | "days" ).
    notToken            = logNotOp | bitNotOp.
    multToken           = multOp | divideOp | moduloOp.
    addToken            = addOp | subOp.
    shiftToken          = shiftLeftOp shiftLeftOp | shiftRightOp shiftRightOp.
    bitToken            = andOp | orOp | xorOp.


IGNORE cr + lf + tab

/*-------------------------------------------------------------------------*/

PRODUCTIONS

HackerCalc
= Expr.

Expr                = BitExpr.

BitExpr
=
                    ShiftExpr
                    {
                        bitToken                                (. AddBitOperator(t.val); .)
                        ShiftExpr
                    }
.

ShiftExpr
=                   AddExpr
                    {
                        shiftToken                              (. AddShiftOperator(t.val); .)
                        AddExpr
                    }
.

AddExpr
=                   MulExpr
                    {
                        addToken                                (. AddAddOperator(t.val); .)
                        MulExpr
                    }
.

MulExpr
=                   NotExpr
                    {
                        multToken                               (. AddMultOperator(t.val); .)
                        NotExpr
                    }
.

NotExpr
=                   [
                        notToken                                (. AddNotOperator(t.val); .)
                    ]
                    Term
.

Term
=                   (
                        "("                                     (. AddLeftBracket(); .)
                        Expr
                        ")"                                     (. AddRightBracket(); .)
                    )
                    | Integer
                    | Float
                    | TimeSpan
.

Integer
=                                                               (. var isHex = false; .)
                    (
                        dec_integer                             
                        |
                        hex_integer                             (. isHex = true; .)
                    )                                           (. var intVal = t.val; .)
                                                                (. var isSigned = true; .)
                    [ 
                        integer_type                            (. isSigned = t.val.ToUpper() == "I"; .)
                    ]
                                                                (. var bitWidth = IntegerToken.ParseBitWidth(null); .)
                    [
                        integer_bitwidth                        (. bitWidth = IntegerToken.ParseBitWidth(t.val); .)
                    ]
                                                                (. AddInteger(intVal, isHex, isSigned, bitWidth); .)
.

Float
=                   ( true_float | typed_float )                (. AddFloat(t.val); .)
                    [
                        float_type
                    ]
.

Seconds
=                   seconds_only_1                              (. AddTimespan(t.val); .)
                    timespan_type
                    |
                    seconds_only_2                              (. AddTimespan(t.val); .)
                    "sec"
.

TimeSpan
=                   Seconds                                     
                    [
                        timespan_type
                    ]
.



END HackerCalc.
